{"version":3,"sources":["api/index.ts","services/room.ts","socket/index.ts","pages/lobby.tsx","pages/room.tsx","App.tsx","store/action.ts","store/index.ts","store/reducer.ts","reportWebVitals.ts","index.tsx"],"names":["window","location","protocol","hostname","port","baseURL","apiUrl","roomApi","axios","create","responseType","createRoom","payload","a","roomId","creator","post","name","email","response","data","getRoomRTPCapabilities","get","createRoomTransport","connectTransport","transportId","dtlsParameters","produceTransport","id","consumeTransport","produce","stream","device","mediasoup","rtpCapabilities","load","routerRtpCapabilities","canProduce","serverTransport","transport","console","log","_internal","_data","iceCandidates","iceParameters","createSendTransport","on","callback","serverProducer","track","getVideoTracks","encodings","maxBitrate","codecOptions","videoGoogleStartBitrate","consume","localRtpCapabilities","serverConsumer","consumer","createRecvTransport","serverConsumerInternal","serverConsumerData","producerId","rtpParameters","kind","MediaStream","socket","io","Lobby","props","onSubmit","onJoin","useState","setName","setEmail","setRoomId","joinRoom","setJoinRoom","handleNameChange","useCallback","e","target","value","handleEmailChange","handleRoomChange","handleJoinRoomChange","handleFormSubmit","preventDefault","handleJoinRoom","className","htmlFor","onChange","type","Room","peer","code","onCode","videoRef","useRef","useEffect","current","srcObject","play","muted","handleChange","components","node","inline","children","match","exec","style","atomDark","language","PreTag","String","replace","plugins","gfm","ref","App","selector","useSelector","store","dispatch","useDispatch","setError","setCode","mediaStream","setMediaStream","onCreateRoom","room","createdBy","error","message","emit","onJoinRoom","handleOnCode","userReducer","user","navigator","mediaDevices","getUserMedia","video","combinedReducers","combineReducers","state","action","createStore","devToolsEnhancer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.957fdb58.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst { protocol, hostname, port } = window.location;\n\nexport const baseURL = `${protocol}//${hostname}:${port === '3000' ? 8000 : port}`\nconst apiUrl = `${baseURL}/api`;\n\nexport const roomApi = axios.create({\n    baseURL: `${apiUrl}/room`,\n    responseType: 'json',\n});\n\n","import * as mediasoup from 'mediasoup-client';\nimport { roomApi } from '../api';\nimport { Peer } from '../types/peer';\n\ninterface ICreateRoomParams {\n    roomId: string;\n    creator: Peer,\n}\n\ninterface ICreateRoomResponse {\n    room?: {\n        id: string;\n        createdBy: Peer;\n    },\n    error?: {\n        code: number;\n        message: string;\n    },\n}\n\ninterface IGetRtpCapabilites {\n    rtpCapabilities: mediasoup.types.RtpCapabilities;\n}\n\ninterface ICreateTransport {\n    transport: any;\n}\n\nexport async function createRoom(payload: ICreateRoomParams) {\n    const { roomId, creator } = payload;\n    const response = await roomApi.post(`/create/${roomId}`, {\n        name: creator.name,\n        email: creator.email,\n    });\n\n    return response.data as ICreateRoomResponse;   \n}\n\nexport async function getRoomRTPCapabilities(roomId: string) {\n    const response = await roomApi.get(`/rtp-capabilities/${roomId}`);\n    return response.data as IGetRtpCapabilites; \n}\n\nexport async function createRoomTransport(roomId: string) {\n    const response = await roomApi.get(`/transport/create/${roomId}`);\n    return response.data as ICreateTransport;\n}\n\nexport async function connectTransport(transportId: string, dtlsParameters: any) {\n    //dtlsParameters\n    const response = await roomApi.post(`/transport/connect/${transportId}`, {\n        dtlsParameters,\n    });\n\n    return response.data as any;\n}\n\nexport async function produceTransport(id: string, payload: { transportId: string, kind: string, rtpParameters: string }) {\n    const response = await roomApi.post(`transport/produce/${id}`, { ...payload });\n    return response.data\n}\n\nexport async function consumeTransport(roomId: string, payload: { rtpCapabilities: any }) {\n    const response = await roomApi.post(`transport/consume/${roomId}`, { ...payload });\n    return response.data;\n}\n\nexport async function produce(roomId: string, stream: MediaStream) {\n    const device = new mediasoup.Device();\n    const { rtpCapabilities } = await getRoomRTPCapabilities(roomId);\n    await device.load({ routerRtpCapabilities: rtpCapabilities });\n\n    if (device.canProduce('video')) {\n        const { transport: serverTransport } = await createRoomTransport(roomId);\n        console.log(serverTransport);\n        const { _internal, _data  } = serverTransport;\n        const { transportId } = _internal;\n        const { dtlsParameters, iceCandidates, iceParameters} = _data;\n\n        const transport = device.createSendTransport({\n            id: transportId,\n            dtlsParameters,\n            iceCandidates,\n            iceParameters\n        });\n\n        console.log('send transport created');\n\n        transport.on('connect', async ({ dtlsParameters }, callback) => {\n            await connectTransport(transportId, dtlsParameters);\n            callback()\n        });\n\n        transport.on('produce', async (data, callback) => {\n            console.log(data);\n            const serverProducer = await produceTransport(transportId, { id: transport.id, ...data });\n            callback({ id: serverProducer.id });\n        });\n\n        const producer = transport.produce({\n            track: stream.getVideoTracks()[0],\n            encodings: [\n                    { maxBitrate: 100000 },\n                    { maxBitrate: 300000 },\n                    { maxBitrate: 900000 }\n            ],\n            codecOptions: {\n                videoGoogleStartBitrate : 1000\n            }\n        });\n    }\n}\n\nexport async function consume(roomId: string) {\n    const device = new mediasoup.Device();\n    const { rtpCapabilities } = await getRoomRTPCapabilities(roomId);\n    await device.load({ routerRtpCapabilities: rtpCapabilities });\n    const localRtpCapabilities = device.rtpCapabilities;\n\n    const { transport: serverTransport, consumer: serverConsumer }  = await consumeTransport(roomId, { rtpCapabilities: localRtpCapabilities });\n    const { _internal, _data } = serverTransport;\n    const { transportId } = _internal;\n    const { iceParameters, iceCandidates, dtlsParameters} = _data;\n\n    const transport = device.createRecvTransport({\n        id: transportId,\n        dtlsParameters,\n        iceCandidates,\n        iceParameters,\n    });\n\n    transport.on('connect', async ({ dtlsParameters }, callback) => {\n        await connectTransport(transportId, dtlsParameters);\n        callback()\n    });\n\n    const { _internal: serverConsumerInternal, _data: serverConsumerData } = serverConsumer;\n    const { producerId } = serverConsumerInternal;\n    const { rtpParameters, kind } = serverConsumerData;\n\n\n\n    const consumer = await transport.consume({\n        id: transportId,\n        producerId,\n        rtpParameters,\n        kind: \"video\",\n    });\n\n    const { track } = consumer;\n    return new MediaStream([track]);\n}","import io from 'socket.io-client';\nimport { baseURL } from '../api';\n\nconst socket = io(baseURL);\n\nexport default socket;","import React, { useCallback, useState } from 'react';\n\nexport interface onSubmitParams {\n    name: string;\n    email: string;\n    roomId: string;\n}\n\nexport interface ILobbyProps {\n    onSubmit?: (payload: onSubmitParams) => void;\n    onJoin?: (roomId: string) => void;\n}\n\nconst Lobby: React.FunctionComponent<ILobbyProps> = (props) => {\n\n    const { onSubmit, onJoin } = props;\n    \n    const [name, setName] = useState<string>('');\n    const [email, setEmail] = useState<string>('');\n    const [roomId, setRoomId] = useState<string>('');\n\n    const [joinRoom, setJoinRoom] = useState<string>('');\n\n    const handleNameChange = useCallback((e) => setName(e.target.value), []);\n    const handleEmailChange = useCallback((e) => setEmail(e.target.value), []);\n    const handleRoomChange = useCallback((e) => setRoomId(e.target.value), []);\n\n    const handleJoinRoomChange = useCallback((e) => setJoinRoom(e.target.value), []);\n\n    const handleFormSubmit = useCallback((e) => {\n        e.preventDefault();\n        if (onSubmit) {\n            onSubmit({ name, email, roomId });\n        }\n    }, [email, name, onSubmit, roomId]);\n\n\n    const handleJoinRoom = useCallback((e) => {\n        e.preventDefault();\n        if (onJoin) {\n            onJoin(joinRoom);\n        }\n    }, [onJoin, joinRoom]);\n\n    return(\n        <div className=\"lobby\">\n            <form className=\"form mt-4\" onSubmit={handleFormSubmit}>\n                <fieldset>\n                    <legend>Create Room</legend>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input className=\"form-control\" onChange={handleNameChange} value={name} type=\"text\" id=\"name\"/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input className=\"form-control\" onChange={handleEmailChange} value={email} type=\"email\" id=\"email\"/>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"room\">Room</label>\n                    <input className=\"form-control\" onChange={handleRoomChange} value={roomId} type=\"text\" id=\"room\"/>\n                </div>\n\n                <button className=\"btn btn-success\" type=\"submit\">Submit</button>\n                </fieldset>\n            </form>\n\n            <form className=\"form mt-5\" onSubmit={handleJoinRoom}>\n                <fieldset>\n                    <legend>Join Room </legend>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Room</label>\n                        <input className=\"form-control\" onChange={handleJoinRoomChange} value={joinRoom} type=\"text\" id=\"name\"/>\n                    </div>\n                        <button className=\"btn btn-primary\" type=\"submit\">Join</button>\n                </fieldset>\n            </form>\n        </div>\n    );\n}\n\nexport default Lobby;","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\nimport { atomDark } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport { Peer } from '../types/peer';\n\n\nexport interface IRoomProps {\n    stream: MediaStream;\n    peer: Peer;\n    code?: string;\n    onCode?: (code: string) => void;\n}\n\nconst Room: React.FunctionComponent<IRoomProps> = (props) => {\n    const  { stream, peer, code, onCode } = props;\n    const videoRef = useRef<HTMLVideoElement>(null);\n\n    const [markdown, setMarkdown] = useState<string>('');\n\n    useEffect(() => {\n        if ( videoRef.current ) {\n            console.log(stream)\n            videoRef.current.srcObject = stream;\n            videoRef.current.play();\n\n            if (peer && peer.type === \"producer\") {\n                videoRef.current.muted = true;\n            }\n\n        }\n    }, [peer, stream])\n\n    const handleChange = useCallback((e) => {\n        if (onCode) {\n            onCode(e.target.value);\n        }\n    }, [onCode]);\n\n    const components = {\n        code({node, inline, className, children, ...props}: any) {\n          const match = /language-(\\w+)/.exec(className || '')\n          return !inline && match ? (\n            <SyntaxHighlighter style={atomDark} language={match[1]} PreTag=\"div\" children={String(children).replace(/\\n$/, '')} {...props} />\n          ) : (\n            <code className={className} {...props} />\n          )\n        }\n      }\n\n    return (\n        <div className=\"room\">\n            \n                    { peer && peer.type === \"producer\" \n                    ? <textarea onChange={handleChange} /> \n                    : code && <div className=\"markdown\"><ReactMarkdown children={code} components={components} plugins={[gfm]}  /></div> }\n              \n               \n                    <video className=\"video\" ref={videoRef}  />\n              \n        </div>\n    )\n}\n\nexport default Room;","import React, { useState, useCallback, useEffect } from 'react';\nimport { createRoom, produce, consume } from './services/room';\nimport socket from './socket';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Lobby, { onSubmitParams } from './pages/lobby';\nimport Room from './pages/room';\nimport * as actions from './store/action';\nimport './App.css';\nimport { Store } from './store';\n\nfunction App() {\n\n  const selector = useSelector((store: Store) => store);\n  const dispatch = useDispatch();\n\n  const [error, setError] = useState<string | undefined>('');\n  const [roomId, setRoomId] = useState<string>('');\n\n  const [code, setCode] = useState<string>();\n\n  const [mediaStream, setMediaStream] = useState<MediaStream>(new MediaStream());\n\n  useEffect(() => {\n    socket.on('code', (code) => {\n      console.log('in.. ', code);\n      setCode(code);\n    });\n  }, []);\n\n  const onCreateRoom = useCallback(async (payload: onSubmitParams) => {\n    const { name, email, roomId } = payload;\n    const response = await createRoom({ roomId, creator: { name, email, type: 'producer' } });\n    if (response.room) {\n      setRoomId(response.room.id);\n      dispatch({ type: actions.ADD_USER, payload: { ...response.room.createdBy, type: \"producer\" }});\n    } else {\n      setError(response.error?.message);\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (roomId !== '') {\n      socket.emit('join', roomId);\n    }\n  }, [roomId]);\n\n  const onJoinRoom = useCallback((roomId: string) => {\n    (async() => {\n      console.log(roomId)\n      const stream = await consume(roomId);\n      setRoomId(roomId);\n      setMediaStream(stream);\n    })();\n  }, []);\n\n  const handleOnCode = useCallback((code: string) => {\n    socket.emit('data', { room: roomId, code });\n    console.log('emit', code)\n  }, [roomId]);\n\n  useEffect(() => {\n    \n    if (roomId !== '' && selector.userReducer.user && selector.userReducer.user.type === \"producer\") {\n      (async() => {\n        console.log('getting stream')\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        setMediaStream(stream);\n        await produce(roomId, stream);\n      })()\n    }\n  }, [roomId, selector]);\n\n  return (\n    <div className=\"App\">\n      {\n        roomId ? <Room code={code} onCode={handleOnCode} peer={selector.userReducer.user} stream={mediaStream} /> : <Lobby onJoin={onJoinRoom} onSubmit={onCreateRoom} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import { Peer } from \"../types/peer\";\n\nexport const ADD_USER = \"add_user\";\n\nexport type Actions = { type: typeof ADD_USER, payload: Peer };","import { createStore, combineReducers } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport { Peer } from '../types/peer';\nimport { userReducer } from './reducer';\n\nexport interface Store {\n    userReducer: { user: Peer };\n}\n\nconst combinedReducers = combineReducers({\n    userReducer,\n});\n\nconst store = createStore(combinedReducers, devToolsEnhancer({}));\n\nexport default store;","import { Actions } from './action';\n\nexport const userReducer = (state = {}, action: Actions) => {\n    switch (action.type) {\n        case 'add_user': return { ...state, user: { ...action.payload }}\n        default: return state;\n    }\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}